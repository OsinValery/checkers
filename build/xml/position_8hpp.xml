<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="position_8hpp" kind="file" language="C++">
    <compoundname>position.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includedby refid="main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="position_8cpp" local="yes">src/position.cpp</includedby>
    <includedby refid="searcher_8cpp" local="yes">src/searcher.cpp</includedby>
    <includedby refid="searcher_8hpp" local="yes">src/searcher.hpp</includedby>
    <includedby refid="test_8cpp" local="yes">src/test.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="1">
        <label>src/position.hpp</label>
        <link refid="position_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/main.cpp</label>
        <link refid="main_8cpp_source"/>
      </node>
      <node id="4">
        <label>src/searcher.cpp</label>
        <link refid="searcher_8cpp_source"/>
      </node>
      <node id="5">
        <label>src/searcher.hpp</label>
        <link refid="searcher_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/test.cpp</label>
        <link refid="test_8cpp_source"/>
      </node>
      <node id="3">
        <label>src/position.cpp</label>
        <link refid="position_8cpp_source"/>
      </node>
      <node id="1">
        <label>src/position.hpp</label>
        <link refid="position_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_position" prot="public">Position</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_position" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_position" kindref="compound">Position</ref>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"></codeline>
<codeline lineno="22" refid="class_position_1a9857183667d8c73b3fd9def4646f6588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_position_1a9857183667d8c73b3fd9def4646f6588" kindref="member">board</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;................................................................&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23" refid="class_position_1a4cd31918b9ea0bfe34d70ea172404138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_position_1a4cd31918b9ea0bfe34d70ea172404138" kindref="member">move_of</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_position_1acbfdf523b403104849ffb368bd5d260a" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_position_1a010eadccb7b73deed479b13ca6658d41" kindref="member">set_board</ref>(std::string<sp/>new_board,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_move_of);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_position" kindref="compound">Position</ref><sp/><ref refid="class_position_1a83377e38d96f2aa837d08e386dab1ce7" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_position_1a4dc42f3d6a40d56c8aa6d6af6719a13c" kindref="member">move</ref>(std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>moves);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;&gt;<sp/><ref refid="class_position_1a6c7fb640229a1c494467a4a9b0d65bb7" kindref="member">all_moves</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>color);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;&gt;<sp/><ref refid="class_position_1a3fbc47142032476b8f5165507dd6034a" kindref="member">fig_moves</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>free<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/position.hpp"/>
  </compounddef>
</doxygen>
