#pragma once
#include <vector>
#include <string>

/**
 * \brief этот класс отвечает за логику шашек \n
 * хранит состояние игры и выполняет базовые операции над доской
*/
class Position{
    public:
        /// доска
        /**
         * возможные символы в строке
         * w - простая белая шашка
         * W - белая дамка
         * B - чёрная дамка
         * b - простая чёрная шашка
         * . - пустая клетка
         * _ - недостижимое поле(всегда пустое)
         * номерация доски начинается с 0
         */
        std::string board = "................................................................";
        int move_of = 0; ///< чей ход, 0 - белых, 1 - чёрных

        /**
         * функция для красивой печати
         */
        void print();

        /**
         * меняет состояние игры для позиции
         * требует новую доску и цвет, чей ход
         * true, если ход белых
         */
        void set_board(std::string new_board, bool new_move_of);

        /**
         * возвращает копию себя
         */
        Position copy();

        /**
         * \brief двигает фигуру по заданной траектории
         * \param moves - список клеток в формате
         * {x1,y1,x2,y2,x3,y2....}
         * где 1,2,3 ... - это поля, где фигура делает поворот, когда рубит врага или просто 
         * промежуточное поле, если взятие происходит по 1 линии
         */
        void move(std::vector<int> moves);

        /**
         * возвращает все возможные ходы за 1 цвет
         * \param color true для белых
         */
        std::vector<std::vector<int>> all_moves(bool color);

        /**
         * \brief возвращает все ходы фигуры на поле (x,y)
         * не используйте line и free вне класса
         * \param x - номер вертикали, на которой стоит фигура 0..7
         * \param y - номер горизонтали 0..7
         * \param free - степень свободы во время движения
         * если установить false, фигура может искать только ходы, где она рубит врага
         * \param line - это специальный параметр для дамки
         * когда она несвободна, она может лишь двигаться только по 1 диагонали, проверяя
         * все перпендикулярные линии на наличие врага для новой реккурсии
         * \brief line задаёт номер диагонали, откуда движется фигура
         * \brief 0 - ничего
         * \brief 1 - вверх направо
         * \brief 2,3.4 - диагонали по часовой стрелке
         * \brief 4 - фигура движется из верх-лево в низ-право
         */
        std::vector<std::vector<int>> fig_moves(int x, int y, bool free = true, int line = 0);

};

